plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'AndResGuard'
}

android {
    compileSdkVersion build_version.compileSdkVersion
    // buildToolsVersion build_version.buildToolsVersion

    defaultConfig {
        applicationId build_version.packageName
        targetSdkVersion build_version.targetSdkVersion
        minSdkVersion build_version.minSdkVersion
        versionCode build_version.versionCode
        versionName build_version.versionName
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        config {
            storeFile file("amachitecture")
            storePassword "test123"
            keyAlias "key0"
            keyPassword "test123"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.config
        }
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

andResGuard {
    // mappingFile = file("./resource_mapping.txt")
    // mappingFile = null
    use7zip = true
    useSign = true
    // It will keep the origin path of your resources when it's true
    keepRoot = true
    // If set, name column in arsc those need to proguard will be kept to this value
    // fixedResName = "arg"
    // It will merge the duplicated resources, but don't rely on this feature too much.
    // it's always better to remove duplicated resource from repo
    // mergeDuplicatedRes = true
    whiteList = [
            // your icon
            "R.drawable.icon",
            // for fabric
            "R.string.com.crashlytics.*",
            // for google-services
            // "R.string.google_app_id",
            // "R.string.gcm_defaultSenderId",
            // "R.string.default_web_client_id",
            // "R.string.ga_trackingId",
            // "R.string.firebase_database_url",
            // "R.string.google_api_key",
            // "R.string.google_crash_reporting_api_key",
            // "R.string.project_id",
    ]
    compressFilePattern = [
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif",
    ]
    sevenzip {
        artifact = 'com.tencent.mm:SevenZip:1.2.21'
        //path = "/usr/local/bin/7za"
    }

    /**
     * Optional: if finalApkBackupPath is null, AndResGuard will overwrite final apk
     * to the path which assemble[Task] write to
     **/
    // finalApkBackupPath = "${project.rootDir}/final.apk"

    /**
     * Optional: Specifies the name of the message digest algorithm to user when digesting the entries of JAR file
     * Only works in V1signing, default value is "SHA-1"
     **/
    // digestalg = "SHA-256"
}

dependencies {
    // 单元测试相关库
    testImplementation libs.junit
    androidTestImplementation libs.test_ext
    androidTestImplementation libs.test_runner
    androidTestImplementation libs.test_espresso

    // 项目默认库
    implementation libs.appcompat
    implementation libs.material
    implementation libs.constraint
    implementation libs.androidx_core

}